<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">
    <context:property-placeholder location="classpath:musicPlayer.properties"/>
    <context:component-scan base-package="cjani.spring"/>
    
<!--    <bean id="classicalMusic"-->
<!--          class="cjani.spring.ClassicalMusic"-->
<!--          scope="prototype"-->
<!--          init-method="doMyInit"-->
<!--          destroy-method="doMyDestroy"-->
<!--          factory-method="getClassicalMusic">-->
<!--    </bean>-->
    <bean id="musicList"
          class="java.util.ArrayList"
            scope="prototype">
        <constructor-arg>
            <list>
                <ref bean="classicalMusic"/>
                <ref bean="electronicMusic"/>
                <ref bean="rockMusic"/>
            </list>
        </constructor-arg>
    </bean>
    <bean id="musicPlayer"
          class="cjani.spring.MusicPlayer"
            scope="prototype">
        <property name="musicList" ref="musicList"/>
        <property name="name" value="${musicPlayer.name}"/>
        <property name="volume" value="${musicPlayer.volume}"/>
    </bean>
</beans>